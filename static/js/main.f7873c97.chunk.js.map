{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","onSearchChange","type","onChange","App","e","setState","searchField","target","value","state","title","fetch","then","response","json","users","this","fileteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,YAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAML,EAAMG,QAAQG,OACpB,4BAAIN,EAAMG,QAAQI,aCHbC,EAAW,SAAAR,GAAK,OAC1B,qBAAKC,UAAU,YAAf,SAGOD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACxB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCNlBO,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,eAAd,OAEvB,uBAAOZ,UAAU,SACfa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCiECG,G,wDA7Cb,aAAc,IAAD,8BACX,gBAkBFH,eAAe,SAACI,GACd,EAAKC,SAAS,CACZC,YAAYF,EAAEG,OAAOC,SAlBvB,EAAKC,MAAM,CACTb,SAAS,GACTU,YAAY,GACZI,MAAM,mBANG,E,gEAaO,IAAD,OACjBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAE,EAAKV,SAAS,CAACT,SAASmB,S,+BAYhC,IAAD,EACgCC,KAAKP,MAApCb,EADD,EACCA,SAAUU,EADX,EACWA,YAAYI,EADvB,EACuBA,MACvBO,EAAoBrB,EAASsB,QACjC,SAAA5B,GAAO,OAAIA,EAAQG,KAAK0B,cAAcC,SAASd,EAAYa,kBAG7D,OACE,sBAAK/B,UAAU,MAAf,UACE,6BAAKsB,IACL,cAAC,EAAD,CAAWX,YAAY,kBAAkBC,eAAgBgB,KAAKhB,iBAE9D,cAAC,EAAD,CAAUJ,SAAUqB,W,GAxCVI,cCfHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f7873c97.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css'\r\n\r\nexport const Card = props => (\r\n    <div className=\"card-container\">\r\n        <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\"/>\r\n        <h2>{ props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n);","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport {Card} from '../card/card.component';\r\n\r\nexport const CardList = props => (\r\n   <div className='card-list'>\r\n       \r\n       {\r\n          props.monsters.map(monster => (\r\n            <Card key={monster.id} monster={monster}></Card>\r\n          ))\r\n        }\r\n\r\n   </div>\r\n);","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder,onSearchChange}) =>(\r\n\r\n  <input className='search'\r\n    type=\"search\" \r\n    placeholder={placeholder}\r\n    onChange={onSearchChange}\r\n  />\r\n);","import React, {Component} from 'react';\r\nimport {CardList} from './components/card-list/card-list.component';\r\nimport { SearchBox } from \"./components/search-box/search-box.component\";\r\n//import logo from './logo.svg';\r\nimport './App.css';\r\n\r\n// function App() {\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <header className=\"App-header\">\r\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n//         <p>\r\n//           Edit <code>src/App.js</code> and save to reload.\r\n//         </p>\r\n//         <a\r\n//           className=\"App-link\"\r\n//           href=\"https://reactjs.org\"\r\n//           target=\"_blank\"\r\n//           rel=\"noopener noreferrer\"\r\n//         >\r\n//           Learn React\r\n//         </a>\r\n//       </header>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nclass App extends Component{\r\n  constructor(){\r\n    super();\r\n    \r\n    this.state={\r\n      monsters:[],\r\n      searchField:'',\r\n      title:'Monster Rolodex'\r\n    }\r\n\r\n    //this.handleChange = this.handleChange.bind(this);\r\n\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response => response.json())\r\n      .then(users=>this.setState({monsters:users}))\r\n  }\r\n\r\n  onSearchChange=(e)=>{\r\n    this.setState({\r\n      searchField:e.target.value\r\n    });\r\n  }\r\n  // handleChange(e){\r\n  //   this.setState({searchField:e.target.value});\r\n  // }\r\n\r\n  render(){\r\n    const {monsters, searchField,title} = this.state;\r\n    const fileteredMonsters = monsters.filter(\r\n      monster => monster.name.toLowerCase().includes(searchField.toLowerCase())\r\n    );\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>{title}</h1>\r\n        <SearchBox placeholder='Search Monsters' onSearchChange={this.onSearchChange}></SearchBox>\r\n        \r\n        <CardList monsters={fileteredMonsters}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}